"use strict"; ang.factory("Users", ["TabelaDano", "Plugins", function (a, b) { return { returnUsers: function () { var c = []; try { var d = new Promise(function (d, e) { document.addEventListener("deviceready", function () { b.Sql.Init().then(function (b) { b.transaction(function (b) { b.executeSql("select id,data from tbpersonagens;", [], function (b, f) { for (var g = 0; g < f.rows.length; g++) { var h = JSON.parse(f.rows.item(g).data), i = f.rows.item(g).id; h.id = i; var j = { getVelBas: function () { return (this.atributos.ht + this.atributos.dx) / 4 }, getDesBas: function () { return Math.round((this.atributos.ht + this.atributos.dx) / 4) }, getGdp: function () { return a.returnTabela().getTabelaDanoPorSt(this.atributos.st).gdp }, getGeb: function () { return a.returnTabela().getTabelaDanoPorSt(this.atributos.st).geb }, getEsquiva: function () { return Math.round(this.atributos.ht + this.atributos.dx) / 4 + 3 }, getNenhuma: function () { return { bc: Math.floor(this.atributos.st * this.atributos.st / 10), db: Math.floor((this.atributos.ht + this.atributos.dx) / 4), es: Math.floor((this.atributos.ht + this.atributos.dx) / 4) + 3 } }, getLeve: function () { return { bc: 2 * Math.floor(this.atributos.st * this.atributos.st / 10), db: Math.floor((this.atributos.ht + this.atributos.dx) / 4 * .8), es: Math.floor((this.atributos.ht + this.atributos.dx) / 4) + 3 - 1 } }, getMedia: function () { return { bc: 3 * Math.floor(this.atributos.st * this.atributos.st / 10), db: Math.floor((this.atributos.ht + this.atributos.dx) / 4 * .6), es: Math.floor((this.atributos.ht + this.atributos.dx) / 4) + 3 - 2 } }, getPesada: function () { return { bc: 6 * Math.floor(this.atributos.st * this.atributos.st / 10), db: Math.floor((this.atributos.ht + this.atributos.dx) / 4 * .4), es: Math.floor((this.atributos.ht + this.atributos.dx) / 4) + 3 - 3 } }, getMuitoPesada: function () { return { bc: 10 * Math.floor(this.atributos.st * this.atributos.st / 10), db: Math.floor((this.atributos.ht + this.atributos.dx) / 4 * .2), es: Math.floor((this.atributos.ht + this.atributos.dx) / 4) + 3 - 4 } }, getPrecoFicha: function () { var a = 0, b = 0, c = 0, d = 0; return this.__atributos.st > 0 && (a = 10 * (this.__atributos.st - 10)), this.__atributos.dx > 0 && (b = 20 * (this.__atributos.dx - 10)), this.__atributos.iq > 0 && (c = 20 * (this.__atributos.iq - 10)), this.__atributos.ht > 0 && (d = 10 * (this.__atributos.ht - 10)), parseInt(a) + parseInt(b) + parseInt(c) + parseInt(d) }, getPrecoFichaReal: function () { var a = this.getPrecoFicha() + this.getCustoPericias() + this.getCustoVantagens() + this.getCustoDesVantagens(), b = 2 * (this.atributos.pv - this.__atributos.pv), c = 3 * (this.atributos.pf - this.__atributos.pf), d = 5 * (this.atributos.per - this.__atributos.per), e = 5 * (this.atributos.von - this.__atributos.von), f = 10 * (this.atributos.st - this.__atributos.st), g = 20 * (this.atributos.dx - this.__atributos.dx), h = 20 * (this.atributos.iq - this.__atributos.iq), i = 10 * (this.atributos.ht - this.__atributos.ht); return a += b + c + d + e + f + g + h + i }, getCustoPericias: function () { for (var a = 0, b = 0; b < this.pericias.length; b++) "FACIL" == this.pericias[b].custo && (a += 1 + this.pericias[b].plus), "MEDIO" == this.pericias[b].custo && (a += 2 * this.pericias[b].plus + 2), "DIFICIL" == this.pericias[b].custo && (a += 4 * this.pericias[b].plus + 4), "MUITO DIFICIL" == this.pericias[b].custo && (a += 8 * this.pericias[b].plus + 8); return parseInt(a) }, getCustoVantagens: function () { for (var a = 0, b = 0; b < this.vantagens.length; b++) a += parseInt(this.vantagens[b].custo); return parseInt(a) }, getCustoDesVantagens: function () { for (var a = 0, b = 0; b < this.desvantagens.length; b++) a += parseInt(this.desvantagens[b].custo); return parseInt(a) }, getVantagemValor: function (a) { return parseInt(a.custo) }, getdesvantagemValor: function (a) { return parseInt(a.custo) }, getPericiaValor: function (a) { var b = ""; return "DX" == a.nh && (b = this.atributos.dx), "VON" == a.nh && (b = this.atributos.von), "IQ" == a.nh && (b = this.atributos.iq), "PER" == a.nh && (b = this.atributos.per), "HT" == a.nh && (b = this.atributos.ht), "PF" == a.nh && (b = this.atributos.pf), "PV" == a.nh && (b = this.atributos.pv), "ST" == a.nh && (b = this.atributos.st), parseInt(b) } }; angular.extend(h, j), c.push(h) } c.length > 0 ? d(c) : e([]) }) }) }) }) }); return d } catch (a) { throw a } }, getUser: function () { return { id: "", nome: "", jogador: "", mote: "", background: "", img: "", atributos: { st: "", dx: "", iq: "", ht: "", pv: "", per: "", von: "", fad: "" }, __atributos: { st: "", dx: "", iq: "", ht: "", pv: "", per: "", von: "", fad: "" }, pericias: [], vantagens: [], desvantagens: [], equipamentos: [], getVelBas: function () { return "" }, getDesBas: function () { return "" }, getGdp: function () { return "" }, getGeb: function () { return "" }, getEsquiva: function () { return "" } } }, returnUserToSave: function (a) { var b = function (a) { var b = 0; return b = a > 100 ? 100 : a < 1 ? 1 : a }, c = function (a, b) { var c = ""; return c = a.length > b ? a.substr(0, b) : a }; return a.atributos.st = b(a.atributos.st), a.atributos.dx = b(a.atributos.dx), a.atributos.iq = b(a.atributos.iq), a.atributos.ht = b(a.atributos.ht), a.mote = c(a.mote, 100), a.background = c(a.background, 21), JSON.stringify(a) } } }]);