ang.factory("Plugins", ["$http", function (a) { var b = { Camera: { getPicture: function (a) { var b = new Promise(function (b, c) { navigator.camera.getPicture(function (c) { b(c) }, function (a) { c(a + ": Erro") }, { quality: a.quality, encodingType: Camera.EncodingType.JPEG, destinationType: Camera.DestinationType.DATA_URL, sourceType: a.sourceType }) }); return b } }, Sql: { InitCharge: function () { var b = new Promise(function (b, c) { var d = null; try { document.addEventListener("deviceready", function () { d = window.sqlitePlugin.openDatabase({ name: "gurps.db", location: "default" }), d.transaction(function (b) { b.executeSql("CREATE TABLE IF NOT EXISTS tbpersonagens (id integer primary key, data text)"), b.executeSql("CREATE TABLE IF NOT EXISTS tbconfig (id integer primary key, data text)"), b.executeSql("select * from tbconfig where id=1;", [], function (a, b) { if (b.rows.length <= 0) { var c = JSON.stringify({ camera_galeria: !1, vibrate: !0, simetria: !0, firstRun: !0 }); a.executeSql("INSERT INTO tbconfig(data) VALUES (?)", [c]), console.log("Insert na tbconfig OK") } }), b.executeSql("CREATE TABLE IF NOT EXISTS tbpericias (id integer primary key, data text)"), b.executeSql("CREATE TABLE IF NOT EXISTS tbvantagens (id integer primary key, data text)"), b.executeSql("CREATE TABLE IF NOT EXISTS tbdesvantagens (id integer primary key, data text)"), DataManager.handle$HttpManager.init$Http(a), DataManager.handleDbConnection.initDb(d), DataManager.handle$HttpManager.getOrderedPericias().then(function (a) { return DataManager.handleDbConnection.handlePericiasData(a) }).then(function (a) { return DataManager.handle$HttpManager.getOrderedVantagens() }).then(function (a) { return DataManager.handleDbConnection.handleVantagemData(a) }).then(function (a) { return DataManager.handle$HttpManager.getOrderedDesvantagens() }).then(function (a) { return DataManager.handleDbConnection.handleDesvantagens(a) }).then(function (a) { console.log(a) }) }), b(d) }) } catch (a) { c(null) } }); return b }, Init: function () { return new Promise(function (a, b) { document.addEventListener("deviceready", function () { var b = window.sqlitePlugin.openDatabase({ name: "gurps.db", location: "default" }); a(b) }) }) }, executeQuery: function (a) { var b = window.sqlitePlugin.openDatabase({ name: "gurps.db", location: "default" }); b.transaction(function (b) { b.executeSql("INSERT INTO tbpersonagens(data) VALUES (?)", [a]) }, function (a) { console.log("Transaction ERROR: " + a.message) }, function () { console.log("Insert na tbpersonagem OK") }) }, executeQueryUpdate: function (a, b) { var c = window.sqlitePlugin.openDatabase({ name: "gurps.db", location: "default" }); c.transaction(function (c) { c.executeSql("update tbpersonagens set data =? where id=?", [a, b]) }, function (a) { console.log("Transaction ERROR: " + a.message) }, function () { console.log("Update na tbpersonagem OK") }) }, executeQueryExcluir: function (a) { var b = window.sqlitePlugin.openDatabase({ name: "gurps.db", location: "default" }); b.transaction(function (b) { b.executeSql("delete from tbpersonagens where id=?", [a]) }, function (a) { console.log("Transaction ERROR: " + a.message) }, function () { console.log("Delete na tbpersonagem OK") }) }, resetGeral: function () { var a = new Promise(function (a, c) { var d = window.sqlitePlugin.openDatabase({ name: "gurps.db", location: "default" }); d.transaction(function (c) { c.executeSql("delete from tbpersonagens", []), c.executeSql("delete from tbpersonagens", []), c.executeSql("delete from tbpericias", []), c.executeSql("delete from tbvantagens", []), c.executeSql("delete from tbdesvantagens", []), b.Sql.InitCharge(), a(!0) }, function (a) { console.log("Transaction ERROR: " + a.message), c(!1) }, function () { console.log("Delete na tbpersonagem OK") }) }); return a } } }; return b }]);